name: CI/CD bruhhhhhh

on:
  push:
    branches:
      - master  
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Add GitHub to known_hosts
        run: |
            if (-not (Test-Path "$env:USERPROFILE\.ssh")) {
            mkdir -p ~/.ssh  # Chỉ tạo thư mục nếu chưa tồn tại
              }
            if (Test-Path ~/.ssh/known_hosts) {
            ssh-keygen -R github.com
              }
            ssh-keyscan github.com >> ~/.ssh/known_hosts
        shell: pwsh

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Install dependencies
        run: go mod tidy
        shell: pwsh 

      
      - name: Run Tests (skip)
        if: false
        run: go test ./...

      - name: Test PostgreSQL connection
        run: |
          echo "Testing PostgreSQL connection..."
          $env:PGPASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
          pg_isready -h localhost -p ${{ secrets.POSTGRES_PORT }} -U ${{ secrets.POSTGRES_USER }}
        shell: pwsh
        
      - name: Build Go Application (skip .pb.validate.go)
        run: |
          go build -o myapp.exe ./main.go
        shell: pwsh
      - name: clean upp
        run: |
          echo "clean ..."
          if (Test-Path myapp.exe) { Remove-Item -Force myapp.exe }
        shell: pwsh

  docker:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        shell: pwsh

      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest
        shell: pwsh

  deploy:
    needs: docker
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          @"
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          APP_HTTP_PORT=${{ secrets.APP_HTTP_PORT }}
          APP_GRPC_PORT=${{ secrets.APP_GRPC_PORT }}
          "@ | Out-File -Encoding utf8 .env
        shell: pwsh
      - name: stop existing container
        run: |
          echo "stopping existing containers ..."
          docker-compose down || true
        shell: pwsh
      - name: Deploy with container compose
        run: |
          docker-compose up -d --build
        shell: pwsh
